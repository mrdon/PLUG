package com.atlassian.plugin.util;

import org.apache.commons.io.IOUtils;

import java.io.IOException;
import java.io.InputStream;
import java.util.Properties;

/**
 * General utility functions for plugin framework.
 *
 * @since 2.7.0
 */
public final class PluginFrameworkUtils
{
    private static final String BUILD_PROPERTY_PATH = "META-INF/maven/com.atlassian.plugins/atlassian-plugins-core/pom.properties";

    /**
     * Not for instantiation.
     */
    private PluginFrameworkUtils()
    {}

    private static String pluginFrameworkVersion = null;

    /**
     * Get the current plugin framework version.
     * This is not necessary in OSGi format as it is generated by maven during build process.
     *
     * @return current plugin framework version.
     */
    public static synchronized String getPluginFrameworkVersion()
    {
        if (pluginFrameworkVersion == null)
        {
            pluginFrameworkVersion = getPluginFrameworkVersionRaw();
        }

        return pluginFrameworkVersion;
    }

    private static String getPluginFrameworkVersionRaw()
    {
        Properties props = new Properties();
        InputStream in = null;

        try
        {
            in = ClassLoaderUtils.getResourceAsStream(BUILD_PROPERTY_PATH, PluginFrameworkUtils.class);
            // this should automatically get rid of comment lines.
            props.load(in);
            return props.getProperty("version");
        }
        catch (IOException e)
        {
            throw new IllegalStateException("cannot determine the plugin framework version", e);
        }
        finally
        {
            IOUtils.closeQuietly(in);
        }
    }
}
